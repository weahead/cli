#!/usr/bin/env bash

set -e

ROOT_DIR=$(dirname "$(perl -e 'use Cwd "abs_path"; print abs_path(shift)' "$0")")

. "${ROOT_DIR}/../../utils"

COMMAND="${1}"
NO_PULL=""
NO_PUSH=""
shift

# https://stackoverflow.com/a/14203146
POSITIONAL=()
while [ $# -gt 0 ]
do
key="$1"

case $key in
    -y|--yes)
    YES=1
    shift # past argument
    ;;
    --no-pull)
    if [ "${COMMAND}" = "import" ]; then
      NO_PULL=1
    fi
    shift # past argument
    ;;
    --no-push)
    if [ "${COMMAND}" = "export" ]; then
      NO_PUSH=1
    fi
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

PROJECT_DIR=$(wa_project_dir)

if [ ! -f "${PROJECT_DIR}/docker-compose.util.yml" ]; then
  abort "Missing file 'docker-compose.util.yml'."
fi

if ! wa_check_docker; then
  abort
fi

if [ "${COMMAND}" = "import" ]; then
  warn "#######################
  ##### PLEASE READ #####
  #######################

  To ${COMMAND} the data properly all containers/services and volumes will have to be stopped and removed.
  This *WILL REPLACE* all your data with the data from the import."

  if [ "${YES}" = "1" ]; then
    info "Option '-y' given, proceeding without prompt."
  fi

  if [ "${YES}" = "1" ] || wa_ask_yes; then
    "${ROOT_DIR}/../nuke"
  else
    abort
  fi
fi

docker-compose -f "${PROJECT_DIR}/docker-compose.util.yml" pull "data-${COMMAND}"
docker-compose -f "${PROJECT_DIR}/docker-compose.util.yml" run --rm -e NO_PULL="${NO_PULL}" -e NO_PUSH="${NO_PUSH}" "data-${COMMAND}"
